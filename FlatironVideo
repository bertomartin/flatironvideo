POLISH LIST

- markers should trigger "play" button
#- index page padding on bottom
- cartoon
- maybe: domain name
- add on skin: video.name, video.description
- button align (login page)
#- signup page (red and bullets)
- add "login" link on sign up page


***

Visually:

1. press "new note"
---> new note form (video_id, video_timestamp)
2. pauses video, and shows text field
3. when you submit form (notes), saves (with timestamp and video_id) and starts playing the video
---> submitted the note form (new note instance in database, with video_id, video_timestamp, text)
4. you can see a "pin" for all the notes on the video timeline
---> Note.all.find_by(video_id)
---> video_timestamp will plot it on video timeline

MODELS:

video
- association: has_many :notes
- columns: name:string, link:string, lecture_date:date

note
- association: belongs_to :video
- columns: body:text, video_timestamp:integer, video_id:integer

#TODO:
#- generate video model
#- generate note model
#- do associations
#- stub out controller actions 
#- get seed data
#- views

- test the Javascript functionality (video.js)
- questions
- instructors
- students
- answers

FEATURES:
#- Instructor can post videos
- Students can post questions
- Instructor can answer questions
#- Students can save and edit notes
#- Plot pins for questions and notes
- Customize skin for video timeline note pins
#- Can login as student or instructor
- Student view clones videos (how does instructor destroying the video work?)
- Chapters/bookmarks



Video.js
#- get time dynamically, change png of skin to be 

PULL REQUESTS:
- change your "video_player" to "video_tag"

#END GOALS:
#- finish edit functionality for notes
#- destroy notes
#- instructor login first
#- be able to add videos (links)

#Making Edit/Update Work
#- press edit button
#--- 1: show/hide: show the form version, hid the finished version
#- render the form version of the note
#- hit save
#--- 1: .post(update route, data, function(response))
#--- 2: in controller, update the note. send back json object with updated information
#--- 3: replace the note body with the response
#- updates database with updated note info
#- shows updated note info on the page
#--- 1: switches show and hide


QUESTIONS:

#1. How can we achieve a better version of this? -->
  $('.append_note').html("<%= escape_javascript render @note.name %>");
  ---- underscore templates
#2. Can you use AJAX to refresh the skin without refreshing video to dynamically add chapters
#3. How can we make the authentication token dynamic?
#4. is @current_user available everywhere because it's a helper method?
#5. Different js files?
#6. Why does .get('notes') ... nevamind

TODAY:
#- destroy notes
#- make instructor model
#- allows instructor to make new videos (CRUD)
#- make student model 
#- login [ student : instructor ]
#- fix the JavaScript form (text, timestamp remains in create note fields)
#- Work on form_render for JS (instead of literal HTML string)

PLAN:
-- Student questions
#-- Login for both students and instructors
#-- Sessions controller
#-- permissions (one Users model)
#-- Build out CRUD features for Video objects
#-- Build out the routes for Video

- User table
#- Sessions Controller to manage User sessions
#- Login/Logout Page (tightly correlated with sessions)
- Build out other features (questions, answer)
- Griddler (instructor sends video)
- SendGrid

#Permissions/Users
#- make users model
#----> name, email, password, permission_type(students, instructor)
#----> associations: has_many :videos, has_many :notes

#- notes
#----> belongs_to :user
#- @user.permission_type = "student"
#- alias as "student"

#- videos
#----> belongs_to :user
#- @user.permission_type = "instructor"
#- alias as "instructor"
#- seed data
#- figure out sessions
#- add password encryption (bcrypt)

# CLEAN UP
#- if student, "new video" is hidden
#- if instructor, "new video form" is hidden until you click "new video"
#- make video name the link, get rid of "Show"
#- rename "destroy" to "delete video"
#- if student, "edit video" is hidden
#- "new note" button shows "new note form", other wise, form is hidden
#- "edit form" is hidden until the edit button is clicked
#- change timestamp to float
#- timestamp needs to be hidden
#- on "create note", clear out the "new form" fields
#- rename "Back" to "All Videos" of "Main"
#- AJAX all the functions on the entire note page
- fix the video cloning, so video can't be destroyed by instructor
#- ajax should only return new values, NOT the whole form (fixes token)


FOR Nov 21st:
#- edit ajax form is now create
#- timeline plotting of notes
#- validating the login information
#- signup page
#- deploy today
#- hide edit until click on edit button
#- toggle Create

TIMELINE
#- plot points on timeline
#- find the right note
#- scroll up the right note

Nov 23rd:
- play with skin to get progress bar on the bottom and full span
#- when you click on the hearts, it gets a note -> put an anchor tag on canvas
#- when you reload page, JS dynamically adds hearts back on the timeline
#- add delete button in ajax form
#- make everything else AJAX!!!!!!! (i.e 'Delete', 'Update' are still refreshing page)
#- fix note.hide()
#- play button for notes
#- plotting points
- add scroll divs
  
more on DOM levels: 
quirksmode.org/js/dom0.html
DOM level 2 has more support

- websocket: 

ALL THE BROKEN STUFF TO FIX: 
- 

CSS and UI:
- get rid of white space
- autoplay
- know what I'm watching
- big enough screen
- focus on video (dim out)
- play/pause on spacebar
- make bar bigger
- about section
#X- notes: boxed notes, same width as video, 
#- notes shouldn't be sorted by id, they should be sorted by timestamp


- style buttons
- scroll on hover
- order by timestamp
- hover note to show buttons
- notes scroll with video
